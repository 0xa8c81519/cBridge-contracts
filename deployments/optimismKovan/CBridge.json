{
  "address": "0x841ce48F9446C8E281D3F1444cB859b4A6D0738C",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "transferId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hashlock",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "timelock",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "srcChainId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "srcTransferId",
          "type": "bytes32"
        }
      ],
      "name": "LogNewTransferIn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "transferId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hashlock",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "timelock",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "dstChainId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstAddress",
          "type": "address"
        }
      ],
      "name": "LogNewTransferOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "transferId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "LogTransferConfirmed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "transferId",
          "type": "bytes32"
        }
      ],
      "name": "LogTransferRefunded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_transferId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_preimage",
          "type": "bytes32"
        }
      ],
      "name": "confirm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_transferId",
          "type": "bytes32"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dstAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_hashlock",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_timelock",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "_srcChainId",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "_srcTransferId",
          "type": "bytes32"
        }
      ],
      "name": "transferIn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bridge",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_hashlock",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_timelock",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "_dstChainId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_dstAddress",
          "type": "address"
        }
      ],
      "name": "transferOut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "transfers",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hashlock",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "timelock",
          "type": "uint64"
        },
        {
          "internalType": "enum CBridge.TransferStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc9c282c628d766c0cfd7fd97815aa6e21bcfc431563e76b5111f268bd1c7d92d",
  "receipt": {
    "to": null,
    "from": "0x1b9dFC56e38b0F92448659C114e2347Bd803911c",
    "contractAddress": "0x841ce48F9446C8E281D3F1444cB859b4A6D0738C",
    "transactionIndex": 0,
    "gasUsed": "3121808",
    "logsBloom": "0x
    "blockHash": "0xa95acdd7ba3954fac06ed0ac4908b378d56d085d539d37c8c0e19dd02aeb6ef8",
    "transactionHash": "0xc9c282c628d766c0cfd7fd97815aa6e21bcfc431563e76b5111f268bd1c7d92d",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1068722,
        "transactionHash": "0xc9c282c628d766c0cfd7fd97815aa6e21bcfc431563e76b5111f268bd1c7d92d",
        "address": "0x4200000000000000000000000000000000000006",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000001b9dfc56e38b0f92448659c114e2347bd803911c",
          "0x0000000000000000000000004200000000000000000000000000000000000011"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000766b29364240",
        "logIndex": 0,
        "blockHash": "0xa95acdd7ba3954fac06ed0ac4908b378d56d085d539d37c8c0e19dd02aeb6ef8"
      }
    ],
    "blockNumber": 1068722,
    "cumulativeGasUsed": "3121808",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "dbd6a5918582338033f4deac04370020",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+ovm+commit.aff196a1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"timelock\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"srcTransferId\",\"type\":\"bytes32\"}],\"name\":\"LogNewTransferIn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"timelock\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"dstChainId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"}],\"name\":\"LogNewTransferOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"LogTransferConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"}],\"name\":\"LogTransferRefunded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_transferId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_preimage\",\"type\":\"bytes32\"}],\"name\":\"confirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_transferId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_timelock\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_srcTransferId\",\"type\":\"bytes32\"}],\"name\":\"transferIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_timelock\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_dstChainId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"}],\"name\":\"transferOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"transfers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"timelock\",\"type\":\"uint64\"},{\"internalType\":\"enum CBridge.TransferStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"confirm(bytes32,bytes32)\":{\"details\":\"confirm a transfer.\",\"params\":{\"_preimage\":\"key for the hashlock\",\"_transferId\":\"Id of pending transfer.\"}},\"refund(bytes32)\":{\"details\":\"refund a transfer after timeout.\",\"params\":{\"_transferId\":\"Id of pending transfer.\"}},\"transferIn(address,address,uint256,bytes32,uint64,uint64,bytes32)\":{\"details\":\"transfer sets up a new inbound transfer with hash time lock.\"},\"transferOut(address,address,uint256,bytes32,uint64,uint64,address)\":{\"details\":\"transfer sets up a new outbound transfer with hash time lock.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CBridge.sol\":\"CBridge\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"contracts/CBridge.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./libraries/SafeERC20.sol\\\";\\n\\ncontract CBridge {\\n    using SafeERC20 for IERC20;\\n\\n    enum TransferStatus {\\n        Null,\\n        Pending,\\n        Confirmed,\\n        Refunded\\n    }\\n    struct Transfer {\\n        address sender;\\n        address receiver;\\n        address token;\\n        uint256 amount;\\n        bytes32 hashlock; // hash of the preimage\\n        uint64 timelock; // UNIX timestamp seconds - locked UNTIL this time\\n        TransferStatus status;\\n    }\\n\\n    mapping(bytes32 => Transfer) public transfers;\\n\\n    event LogNewTransferOut(\\n        bytes32 transferId,\\n        address sender,\\n        address receiver,\\n        address token,\\n        uint256 amount,\\n        bytes32 hashlock, // hash of the preimage\\n        uint64 timelock, // UNIX timestamp seconds - locked UNTIL this time\\n        uint64 dstChainId,\\n        address dstAddress\\n    );\\n    event LogNewTransferIn(\\n        bytes32 transferId,\\n        address sender,\\n        address receiver,\\n        address token,\\n        uint256 amount,\\n        bytes32 hashlock, // hash of the preimage\\n        uint64 timelock, // UNIX timestamp seconds - locked UNTIL this time\\n        uint64 srcChainId,\\n        bytes32 srcTransferId // outbound transferId at src chain\\n    );\\n    event LogTransferConfirmed(bytes32 transferId, bytes32 preimage);\\n    event LogTransferRefunded(bytes32 transferId);\\n\\n    /**\\n     * @dev transfer sets up a new outbound transfer with hash time lock.\\n     */\\n    function transferOut(\\n        address _bridge,\\n        address _token,\\n        uint256 _amount,\\n        bytes32 _hashlock,\\n        uint64 _timelock,\\n        uint64 _dstChainId,\\n        address _dstAddress\\n    ) external {\\n        bytes32 transferId = _transfer(_bridge, _token, _amount, _hashlock, _timelock);\\n        emit LogNewTransferOut(\\n            transferId,\\n            msg.sender,\\n            _bridge,\\n            _token,\\n            _amount,\\n            _hashlock,\\n            _timelock,\\n            _dstChainId,\\n            _dstAddress\\n        );\\n    }\\n\\n    /**\\n     * @dev transfer sets up a new inbound transfer with hash time lock.\\n     */\\n    function transferIn(\\n        address _dstAddress,\\n        address _token,\\n        uint256 _amount,\\n        bytes32 _hashlock,\\n        uint64 _timelock,\\n        uint64 _srcChainId,\\n        bytes32 _srcTransferId\\n    ) external {\\n        bytes32 transferId = _transfer(_dstAddress, _token, _amount, _hashlock, _timelock);\\n        emit LogNewTransferIn(\\n            transferId,\\n            msg.sender,\\n            _dstAddress,\\n            _token,\\n            _amount,\\n            _hashlock,\\n            _timelock,\\n            _srcChainId,\\n            _srcTransferId\\n        );\\n    }\\n\\n    /**\\n     * @dev confirm a transfer.\\n     *\\n     * @param _transferId Id of pending transfer.\\n     * @param _preimage key for the hashlock\\n     */\\n    function confirm(bytes32 _transferId, bytes32 _preimage) external {\\n        Transfer memory t = transfers[_transferId];\\n\\n        require(t.status == TransferStatus.Pending, \\\"not pending transfer\\\");\\n        require(t.hashlock == keccak256(abi.encodePacked(_preimage)), \\\"incorrect preimage\\\");\\n\\n        transfers[_transferId].status = TransferStatus.Confirmed;\\n\\n        IERC20(t.token).safeTransfer(t.receiver, t.amount);\\n        emit LogTransferConfirmed(_transferId, _preimage);\\n    }\\n\\n    /**\\n     * @dev refund a transfer after timeout.\\n     *\\n     * @param _transferId Id of pending transfer.\\n     */\\n    function refund(bytes32 _transferId) external {\\n        Transfer memory t = transfers[_transferId];\\n\\n        require(t.status == TransferStatus.Pending, \\\"not pending transfer\\\");\\n        require(t.timelock <= block.timestamp, \\\"timelock not yet passed\\\");\\n\\n        transfers[_transferId].status = TransferStatus.Refunded;\\n\\n        IERC20(t.token).safeTransfer(t.sender, t.amount);\\n        emit LogTransferRefunded(_transferId);\\n    }\\n\\n    /**\\n     * @dev transfer sets up a new transfer with hash time lock.\\n     */\\n    function _transfer(\\n        address _receiver,\\n        address _token,\\n        uint256 _amount,\\n        bytes32 _hashlock,\\n        uint64 _timelock\\n    ) private returns (bytes32 transferId) {\\n        require(_amount > 0, \\\"invalid amount\\\");\\n        require(_timelock > block.timestamp, \\\"invalid timelock\\\");\\n\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        transferId = keccak256(abi.encodePacked(msg.sender, _receiver, _hashlock, chainId));\\n        require(transfers[transferId].status == TransferStatus.Null, \\\"transfer exists\\\");\\n\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n        transfers[transferId] = Transfer(\\n            msg.sender,\\n            _receiver,\\n            _token,\\n            _amount,\\n            _hashlock,\\n            _timelock,\\n            TransferStatus.Pending\\n        );\\n        return transferId;\\n    }\\n}\\n\",\"keccak256\":\"0x0e82d3ff420e5c5ba1ccb93ef2dbe2a044198cc1db5385a5bf805537888a45bf\",\"license\":\"GPL-3.0-only\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nlibrary SafeERC20 {\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transfer.selector, to, value)\\n        );\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"ERC20 operation did not succeed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)\\n        );\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"ERC20 operation did not succeed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x80cb90e25d5cfb52cb54e3b3fb0b742044c48b723bb5e2546cc00e242deebb87\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "confirm(bytes32,bytes32)": {
        "details": "confirm a transfer.",
        "params": {
          "_preimage": "key for the hashlock",
          "_transferId": "Id of pending transfer."
        }
      },
      "refund(bytes32)": {
        "details": "refund a transfer after timeout.",
        "params": {
          "_transferId": "Id of pending transfer."
        }
      },
      "transferIn(address,address,uint256,bytes32,uint64,uint64,bytes32)": {
        "details": "transfer sets up a new inbound transfer with hash time lock."
      },
      "transferOut(address,address,uint256,bytes32,uint64,uint64,address)": {
        "details": "transfer sets up a new outbound transfer with hash time lock."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 108,
        "contract": "contracts/CBridge.sol:CBridge",
        "label": "transfers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(Transfer)104_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(TransferStatus)89": {
        "encoding": "inplace",
        "label": "enum CBridge.TransferStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_bytes32,t_struct(Transfer)104_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct CBridge.Transfer)",
        "numberOfBytes": "32",
        "value": "t_struct(Transfer)104_storage"
      },
      "t_struct(Transfer)104_storage": {
        "encoding": "inplace",
        "label": "struct CBridge.Transfer",
        "members": [
          {
            "astId": 91,
            "contract": "contracts/CBridge.sol:CBridge",
            "label": "sender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 93,
            "contract": "contracts/CBridge.sol:CBridge",
            "label": "receiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 95,
            "contract": "contracts/CBridge.sol:CBridge",
            "label": "token",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 97,
            "contract": "contracts/CBridge.sol:CBridge",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 99,
            "contract": "contracts/CBridge.sol:CBridge",
            "label": "hashlock",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32"
          },
          {
            "astId": 101,
            "contract": "contracts/CBridge.sol:CBridge",
            "label": "timelock",
            "offset": 0,
            "slot": "5",
            "type": "t_uint64"
          },
          {
            "astId": 103,
            "contract": "contracts/CBridge.sol:CBridge",
            "label": "status",
            "offset": 8,
            "slot": "5",
            "type": "t_enum(TransferStatus)89"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}